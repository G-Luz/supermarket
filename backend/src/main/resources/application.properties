# Details for our datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/supermarket
spring.datasource.username=gabriel
spring.datasource.password=abc12345

spring.jackson.serialization.indent-output=true

# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true
#spring.jackson.serialization.fail-on-empty-beans=false
spring.profiles.active=development
server.error.include-message=always
logging.file.name=logs.log
#DROP TABLE users CASCADE;
#DROP TABLE bags CASCADE;
#DROP TABLE products CASCADE;
#DROP TABLE items CASCADE;
#

#https://generatedata.com/generator


#CREATE TABLE users
#(
#    id       SERIAL PRIMARY KEY,
#    name     VARCHAR(150)     NOT NULL,
#    email    VARCHAR(150) NOT NULL,
#    password VARCHAR(150) NOT NULL,
#    role VARCHAR(10) NOT NULL
#);
#CREATE TABLE products
#(
#    id            SERIAL PRIMARY KEY,
#    name          VARCHAR(50)      NOT NULL,
#    base_64_image TEXT          NOT NULL,
#    description   VARCHAR(50)      NOT NULL,
#    category      VARCHAR(30)      NOT NULL,
#    enable        BOOLEAN DEFAULT TRUE,
#    rating        DOUBLE PRECISION DEFAULT 0,
#    price         DOUBLE PRECISION NOT NULL
#);
#
#CREATE TABLE items
#(
#    id         SERIAL PRIMARY KEY,
#    item_count INTEGER NOT NULL,
#    product_id INT     NOT NULL,
#    CONSTRAINT fk_bag_product FOREIGN KEY (product_id)
#        REFERENCES products (id)
#);
#
#CREATE TABLE bags
#(
#    id          SERIAL PRIMARY KEY,
#    total_items INTEGER          NOT NULL,
#    total_price DOUBLE PRECISION NOT NULL,
#    user_id     INT              NOT NULL,
#    CONSTRAINT fk_bag_user FOREIGN KEY (user_id)
#        REFERENCES users (id),
#    items_id    INT              NOT NULL,
#    CONSTRAINT fk_bag_items FOREIGN KEY (items_id)
#        REFERENCES items (id)
#);